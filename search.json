[{"path":"https://tripartio.github.io/autogam/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Chitu Okoli Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://tripartio.github.io/autogam/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Chitu Okoli. Author, maintainer.","code":""},{"path":"https://tripartio.github.io/autogam/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Okoli C (2024). autogam: Automate Creation Generalized Additive Models (GAMs). R package version 0.0.1, https://tripartio.github.io/autogam/, https://github.com/tripartio/autogam.","code":"@Manual{,   title = {autogam: Automate the Creation of Generalized Additive Models (GAMs)},   author = {Chitu Okoli},   year = {2024},   note = {R package version 0.0.1, https://tripartio.github.io/autogam/},   url = {https://github.com/tripartio/autogam}, }"},{"path":"https://tripartio.github.io/autogam/index.html","id":"autogam","dir":"","previous_headings":"","what":"Automate the Creation of Generalized Additive Models (GAMs)","title":"Automate the Creation of Generalized Additive Models (GAMs)","text":"AutoGAM wrapper package mgcv makes easier create high-performing Generalized Additive Models (GAMs). central function autogam(), entering just dataset name outcome column inputs, AutoGAM tries automate much possible procedure configuring highly accurate GAM reasonably high speed, even large datasets.","code":""},{"path":"https://tripartio.github.io/autogam/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Automate the Creation of Generalized Additive Models (GAMs)","text":"can install development version autogam like :","code":"# install.packages(\"devtools\") devtools::install_github(\"tripartio/autogam\")"},{"path":"https://tripartio.github.io/autogam/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Automate the Creation of Generalized Additive Models (GAMs)","text":"’s simple example using mtcars dataset predict mpg:","code":"library(autogam)  ag <- autogam(mtcars, 'mpg')  summary(ag) #>  #> Family: gaussian  #> Link function: identity  #>  #> Formula: #> mpg ~ cyl + s(disp) + s(hp) + s(drat) + s(wt) + s(qsec) + vs +  #>     am + gear + s(carb, k = 3) #>  #> Parametric coefficients: #>             Estimate Std. Error t value Pr(>|t|)   #> (Intercept)   7.3453     5.3267   1.379   0.2671   #> cyl           0.5814     0.5264   1.104   0.3547   #> vs           10.3131     1.7012   6.062   0.0107 * #> am            4.9605     0.8490   5.842   0.0118 * #> gear          0.7107     0.7857   0.905   0.4362   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Approximate significance of smooth terms: #>           edf Ref.df      F p-value    #> s(disp) 1.000  1.000  4.984  0.1117    #> s(hp)   8.739  8.868 17.975  0.0170 *  #> s(drat) 1.987  2.220 16.275  0.0395 *  #> s(wt)   1.764  2.083  2.669  0.1891    #> s(qsec) 8.904  8.970 28.950  0.0089 ** #> s(carb) 1.785  1.876  1.382  0.4412    #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> R-sq.(adj) =  0.996   Deviance explained =  100% #> GCV = 1.7279  Scale est. = 0.1523    n = 32"},{"path":"https://tripartio.github.io/autogam/reference/autogam.html","id":null,"dir":"Reference","previous_headings":"","what":"Automate the creation of a Generalized Additive Model (GAM) — autogam","title":"Automate the creation of a Generalized Additive Model (GAM) — autogam","text":"wrapper package mgcv makes easier create high-performing Generalized Additive Models (GAMs). entering just dataset name outcome column inputs, autogam() tries automate much possible procedure configuring highly accurate GAM reasonably high speed, even large datasets.","code":""},{"path":"https://tripartio.github.io/autogam/reference/autogam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automate the creation of a Generalized Additive Model (GAM) — autogam","text":"","code":"autogam(data, y_col)"},{"path":"https://tripartio.github.io/autogam/reference/autogam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automate the creation of a Generalized Additive Model (GAM) — autogam","text":"data dataframe. variables data used predict y_col. exclude variables, assign data subset variables desired. y_col character(1). Name y outcome variable.","code":""},{"path":"https://tripartio.github.io/autogam/reference/autogam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automate the creation of a Generalized Additive Model (GAM) — autogam","text":"Returns mgcv::gam object, result predicting y_col variables data.","code":""},{"path":"https://tripartio.github.io/autogam/reference/autogam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Automate the creation of a Generalized Additive Model (GAM) — autogam","text":"","code":"autogam(mtcars, 'mpg') #>  #> Family: gaussian  #> Link function: identity  #>  #> Formula: #> mpg ~ cyl + s(disp) + s(hp) + s(drat) + s(wt) + s(qsec) + vs +  #>     am + gear + s(carb, k = 3) #>  #> Estimated degrees of freedom: #> 1.00 8.74 1.99 1.76 8.90 1.78  total = 29.18  #>  #> GCV score: 1.727942"},{"path":"https://tripartio.github.io/autogam/reference/smooth_formula_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a character string for a mgcv::gam formula — smooth_formula_string","title":"Create a character string for a mgcv::gam formula — smooth_formula_string","text":"Create character string wraps appropriate variables dataframe s() smooth functions. Based datatype variable, determines whether numeric variable smoothed: Non-numeric: smoothing. Numeric: determine knots based number unique values variable: ⩽ 4: smoothing 5 19 (inclusive): smooth function knots equal floored half number unique values. E.g., 6 unique values receive 3 knots, 7 receive 3 knots, 8 receive 4 knots. ⩾ 20: smooth function specified number knots, allowing gam() function detect appropriate number.","code":""},{"path":"https://tripartio.github.io/autogam/reference/smooth_formula_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a character string for a mgcv::gam formula — smooth_formula_string","text":"","code":"smooth_formula_string(data, y_col, smooth_fun = \"s\", expand_parametric = TRUE)"},{"path":"https://tripartio.github.io/autogam/reference/smooth_formula_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a character string for a mgcv::gam formula — smooth_formula_string","text":"data dataframe. variables data except y_col listed resulting formula string. exclude variables, assign data subset variables desired. y_col character(1). Name y outcome variable. smooth_fun character(1). Function use smooth wraps; default 's' s() function. expand_parametric logical(1). TRUE (default), explicitly list non-smooth (parametric) term. FALSE, use . lump together non-smooth terms.","code":""},{"path":"https://tripartio.github.io/autogam/reference/smooth_formula_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a character string for a mgcv::gam formula — smooth_formula_string","text":"Returns single character string represents formula y_col left variables data right, formatted appropriate s() function applicable.","code":""},{"path":"https://tripartio.github.io/autogam/reference/smooth_formula_string.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a character string for a mgcv::gam formula — smooth_formula_string","text":"","code":"smooth_formula_string(mtcars, 'mpg') #> [1] \"mpg ~ cyl + s(disp) + s(hp) + s(drat) + s(wt) + s(qsec) + vs + am + gear + s(carb,k=3)\""}]
